name: main_backend_ci_cd_pipeline
on:
  push:
    branches:
      - "main"
    paths:
      - "backend/**"
  workflow_dispatch:
env:
  # General
  SHH_USER_PASSWORD: ${{secrets.SHH_USER_PASSWORD}}
  DOCKER_HUB_USERNAME: ${{secrets.DOCKER_HUB_USERNAME}}
  DOCKER_HUB_PASSWORD: ${{secrets.DOCKER_HUB_PASSWORD}}
  DOCKER_IMAGE: ${{secrets.DOCKER_HUB_USERNAME}}/${{secrets.DOCKER_HUB_APP_IMAGE}}
  APP_NAME: ${{secrets.APP_NAME}}
  COOKIE_SECRET: ${{secrets.COOKIE_SECRET_MAIN}}
  SENDGRID_API_KEY: ${{secrets.SENDGRID_API_KEY_MAIN}}
  SENDGRID_VERIFIED_EMAIL: ${{secrets.SENDGRID_VERIFIED_EMAIL_MAIN}}
  EMAIL_ADMINISTRATOR: ${{secrets.EMAIL_ADMINISTRATOR}}
  USER_DEMO: ${{secrets.USER_DEMO}}
  PASSWORD_DEMO: ${{secrets.PASSWORD_DEMO}}
  # Environment
  DOCKER_IMAGE_VERSION: backend-main
  DOCKER_NETWORK_NAME: quiz-grad-main-network
  DOCKER_VOLUME_NAME: data-main-qg
  DOCKER_DATABASE_CONTAINER_NAME: ${{secrets.MYSQL_DATABASE_MAIN}}
  DOCKER_BACKEND_CONTAINER_NAME: quiz-grad-backend-main
  MYSQL_PORT: ${{secrets.MYSQL_CONTAINER_PORT_MAIN}}
  MYSQL_HOST: ${{secrets.MYSQL_DATABASE_MAIN}}
  MYSQL_DATABASE: ${{secrets.MYSQL_DATABASE_MAIN}}
  MYSQL_USER: ${{secrets.MYSQL_USER_MAIN}}
  MYSQL_PASSWORD: ${{secrets.MYSQL_PASSWORD_MAIN}}
  MYSQL_ROOT_PASSWORD: ${{secrets.MYSQL_ROOT_PASSWORD_MAIN}}
  BACKEND_CONTAINER_PORT: ${{secrets.BACKEND_CONTAINER_PORT_MAIN}}
  FRONTEND_HOST_DOMAIN: ${{secrets.FRONTEND_HOST_DOMAIN_MAIN}}

jobs:
  build-test-push-docker-image:
    name: Build, Test and Push Docker Image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}

      - name: Build Docker Image
        run: docker build -t ${{env.DOCKER_IMAGE}}:${{env.DOCKER_IMAGE_VERSION}} --target=build ./backend

      - name: Run Prettier
        run: docker run ${{env.DOCKER_IMAGE}}:${{env.DOCKER_IMAGE_VERSION}} sh -c 'npm run format:verify'

      - name: Run ESLint
        run: docker run ${{env.DOCKER_IMAGE}}:${{env.DOCKER_IMAGE_VERSION}} sh -c 'npm run lint'

      # - name: Run Tests
      #   run: docker run ${{env.DOCKER_IMAGE}}:${{env.DOCKER_IMAGE_VERSION}} sh -c 'npm run test'

      - name: Build Docker Image Production
        run: docker build -t ${{env.DOCKER_IMAGE}}:${{env.DOCKER_IMAGE_VERSION}} ./backend

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{env.DOCKER_HUB_USERNAME}}
          password: ${{env.DOCKER_HUB_PASSWORD}}

      - name: Push to Dockerhub
        run: docker push ${{env.DOCKER_IMAGE}}:${{env.DOCKER_IMAGE_VERSION}}

  build-database:
    name: Build Database Container
    runs-on: self-hosted
    needs: build-test-push-docker-image
    steps:
      - name: Network Creation
        run: echo ${{env.SHH_USER_PASSWORD}} | sudo -S docker network create ${{env.DOCKER_NETWORK_NAME}} || true

      - name: Stop Current Running Container
        run: echo ${{env.SHH_USER_PASSWORD}} | sudo -S docker stop ${{env.DOCKER_DATABASE_CONTAINER_NAME}} || true

      - name: Run Docker Container
        run: |
          echo ${{env.SHH_USER_PASSWORD}} | sudo -S docker run --rm -d \
            -e MYSQL_DATABASE=${{env.MYSQL_DATABASE_MAIN}} \
            -e MYSQL_USER=${{env.MYSQL_USER_MAIN}} \
            -e MYSQL_PASSWORD=${{env.MYSQL_PASSWORD_MAIN}} \
            -e MYSQL_ROOT_PASSWORD=${{env.MYSQL_ROOT_PASSWORD_MAIN}} \
            --name ${{env.DOCKER_DATABASE_CONTAINER_NAME}} \
            -v ${{env.DOCKER_VOLUME_NAME}}:/var/lib/mysql \
            --network ${{env.DOCKER_NETWORK_NAME}} \
            mysql:8.3.0

  pull-backend-image-and-run-container:
    runs-on: self-hosted
    needs: build-database
    steps:
      - name: Network Creation
        run: echo ${{env.SHH_USER_PASSWORD}} | sudo -S docker network create ${{env.DOCKER_NETWORK_NAME}} || true

      - name: Stop Current Running Container
        run: echo ${{env.SHH_USER_PASSWORD}} | sudo -S docker stop ${{env.DOCKER_BACKEND_CONTAINER_NAME}} || true

      - name: Pull Docker Image
        run: echo ${{env.SHH_USER_PASSWORD}} | sudo -S docker pull ${{env.DOCKER_IMAGE}}:${{env.DOCKER_IMAGE_VERSION}}

      - name: Run Docker Container
        run: |
          echo ${{env.SHH_USER_PASSWORD}} | sudo -S docker run --rm -d \
            -p ${{env.BACKEND_HOST_PORT_MAIN}}:${{env.BACKEND_CONTAINER_PORT_MAIN}} \
            -e BACKEND_CONTAINER_PORT=${{env.BACKEND_CONTAINER_PORT_MAIN}} \
            -e MYSQL_HOST=${{env.MYSQL_DATABASE_MAIN}} \
            -e MYSQL_PORT=${{env.MYSQL_CONTAINER_PORT_MAIN}} \
            -e MYSQL_DATABASE=${{env.MYSQL_DATABASE_MAIN}} \
            -e MYSQL_USER=${{env.MYSQL_USER_MAIN}} \
            -e MYSQL_PASSWORD=${{env.MYSQL_PASSWORD_MAIN}} \
            -e FRONTEND_HOST_DOMAIN=${{env.FRONTEND_HOST_DOMAIN_MAIN}} \
            -e COOKIE_SECRET=${{env.COOKIE_SECRET_MAIN}} \
            -e SENDGRID_API_KEY=${{env.SENDGRID_API_KEY_MAIN}} \
            -e SENDGRID_VERIFIED_EMAIL=${{env.SENDGRID_VERIFIED_EMAIL_MAIN}} \
            -e APP_NAME=${{env.APP_NAME}} \
            -e EMAIL_ADMINISTRATOR=${{env.EMAIL_ADMINISTRATOR}} \
            -e USER_DEMO=${{env.USER_DEMO}} \
            -e PASSWORD_DEMO=${{env.PASSWORD_DEMO}} \
            --name ${{env.DOCKER_BACKEND_CONTAINER_NAME}} \
            --network ${{env.DOCKER_NETWORK_NAME}} \
            ${{env.DOCKER_IMAGE}}:${{env.DOCKER_IMAGE_VERSION}}
