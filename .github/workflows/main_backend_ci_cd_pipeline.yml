name: main_backend_ci_cd_pipeline

on:
  push:
    branches:
      - "main"
    paths:
      - "backend/**"
  workflow_dispatch:
jobs:
  build-database:
    name: Run Database Container
    runs-on: self-hosted
    steps:
      - name: Create a network for main
        run: echo ${{secrets.SHH_USER_PASSWORD}} | sudo -S docker network create quiz-grad-main-network || true
      - name: Stop old docker container
        run: echo ${{secrets.SHH_USER_PASSWORD}} | sudo -S docker stop ${{secrets.MYSQL_DATABASE_MAIN}} || true
      - name: Run Docker Container
        run: |
          echo ${{secrets.SHH_USER_PASSWORD}} | sudo -S docker run --rm -d \
            --name ${{secrets.MYSQL_DATABASE_MAIN}} \
            -v data-main-qg:/var/lib/mysql \
            -e MYSQL_DATABASE=${{secrets.MYSQL_DATABASE_MAIN}} \
            -e MYSQL_USER=${{secrets.MYSQL_USER_MAIN}} \
            -e MYSQL_PASSWORD=${{secrets.MYSQL_PASSWORD_MAIN}} \
            -e MYSQL_ROOT_PASSWORD=${{secrets.MYSQL_ROOT_PASSWORD_MAIN}} \
            --network quiz-grad-main-network \
            mysql:8.3.0

  build-backend-image-and-push:
    name: Test, Build and Push Image
    runs-on: ubuntu-latest
    needs: build-database
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}

      - name: Testing
        run: |
          docker build -t ${{secrets.DOCKER_HUB_USERNAME}}/${{secrets.DOCKER_HUB_APP_IMAGE}}:backend-main-testing \
            --progress=plain \
            --no-cache \
            --target test \
            ./backend

      - name: Login Dockerhub
        env:
          DOCKER_HUB_USERNAME: ${{secrets.DOCKER_HUB_USERNAME}}
          DOCKER_HUB_PASSWORD: ${{secrets.DOCKER_HUB_PASSWORD}}
        run: docker login -u $DOCKER_HUB_USERNAME -p $DOCKER_HUB_PASSWORD

      - name: Build the Docker image
        run: docker build -t ${{secrets.DOCKER_HUB_USERNAME}}/${{secrets.DOCKER_HUB_APP_IMAGE}}:backend-main ./backend

      - name: Push to Dockerhub
        run: docker push ${{secrets.DOCKER_HUB_USERNAME}}/${{secrets.DOCKER_HUB_APP_IMAGE}}:backend-main

  pull-backend-image-and-run-container:
    runs-on: self-hosted
    needs: build-backend-image-and-push
    steps:
      - name: Create a network for main
        run: echo ${{secrets.SHH_USER_PASSWORD}} | sudo -S docker network create quiz-grad-main-network || true
      - name: Pull Docker image
        run: echo ${{secrets.SHH_USER_PASSWORD}} | sudo -S docker pull ${{secrets.DOCKER_HUB_USERNAME}}/${{secrets.DOCKER_HUB_APP_IMAGE}}:backend-main
      - name: Stop old docker container
        run: echo ${{secrets.SHH_USER_PASSWORD}} | sudo -S docker stop quiz-grad-backend-main || true
      - name: Run Docker Container
        run: |
          echo ${{secrets.SHH_USER_PASSWORD}} | sudo -S docker run --rm -d \
            -p ${{secrets.BACKEND_HOST_PORT_MAIN}}:${{secrets.BACKEND_CONTAINER_PORT_MAIN}} \
            -e BACKEND_CONTAINER_PORT=${{secrets.BACKEND_CONTAINER_PORT_MAIN}} \
            -e MYSQL_HOST=${{secrets.MYSQL_DATABASE_MAIN}} \
            -e MYSQL_PORT=${{secrets.MYSQL_CONTAINER_PORT_MAIN}} \
            -e MYSQL_DATABASE=${{secrets.MYSQL_DATABASE_MAIN}} \
            -e MYSQL_USER=${{secrets.MYSQL_USER_MAIN}} \
            -e MYSQL_PASSWORD=${{secrets.MYSQL_PASSWORD_MAIN}} \
            -e FRONTEND_HOST_DOMAIN=${{secrets.FRONTEND_HOST_DOMAIN_MAIN}} \
            -e COOKIE_SECRET=${{secrets.COOKIE_SECRET_MAIN}} \
            -e SENDGRID_API_KEY=${{secrets.SENDGRID_API_KEY_MAIN}} \
            -e SENDGRID_VERIFIED_EMAIL=${{secrets.SENDGRID_VERIFIED_EMAIL_MAIN}} \
            -e APP_NAME=${{secrets.APP_NAME}} \
            -e EMAIL_ADMINISTRATOR=${{secrets.EMAIL_ADMINISTRATOR}} \
            -e USER_DEMO=${{secrets.USER_DEMO}} \
            -e PASSWORD_DEMO=${{secrets.PASSWORD_DEMO}} \
            --name quiz-grad-backend-main \
            --network quiz-grad-main-network \
            ${{secrets.DOCKER_HUB_USERNAME}}/${{secrets.DOCKER_HUB_APP_IMAGE}}:backend-main
